"""Auth and Blog

Revision ID: 494be4d6a723
Revises: 
Create Date: 2018-04-25 19:16:00.688630

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy_searchable import sync_trigger


# revision identifiers, used by Alembic.
revision = '494be4d6a723'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_groups_id'), 'auth_groups', ['id'], unique=False)
    op.create_table('auth_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('code_name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_permissions_code_name'), 'auth_permissions', ['code_name'], unique=False)
    op.create_index(op.f('ix_auth_permissions_id'), 'auth_permissions', ['id'], unique=False)
    op.create_table('auth_revoked_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blog_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_blog_categories_id'), 'blog_categories', ['id'], unique=False)
    op.create_table('blog_post_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_post_statuses_id'), 'blog_post_statuses', ['id'], unique=False)
    op.create_index(op.f('ix_blog_post_statuses_name'), 'blog_post_statuses', ['name'], unique=False)
    op.create_table('blog_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_tags_id'), 'blog_tags', ['id'], unique=False)
    op.create_index(op.f('ix_blog_tags_name'), 'blog_tags', ['name'], unique=False)
    op.create_table('auth_groups_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['auth_groups.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['auth_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_users_email'), 'auth_users', ['email'], unique=True)
    op.create_index(op.f('ix_auth_users_id'), 'auth_users', ['id'], unique=False)
    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=512), nullable=True),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('summarized', sa.Text(), nullable=True),
    sa.Column('edited_content', sa.Text(), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('update_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('publish_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('allow_comment', sa.Boolean(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['blog_categories.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['blog_post_statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_posts_category_id'), 'blog_posts', ['category_id'], unique=False)
    op.create_index(op.f('ix_blog_posts_id'), 'blog_posts', ['id'], unique=False)
    op.create_index('ix_blog_posts_search_vector', 'blog_posts', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_blog_posts_status_id'), 'blog_posts', ['status_id'], unique=False)
    op.create_table('blog_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_name', sa.String(length=32), nullable=True),
    sa.Column('author_email', sa.String(length=128), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('create_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['blog_comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['blog_posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_comments_id'), 'blog_comments', ['id'], unique=False)
    op.create_index(op.f('ix_blog_comments_parent_comment_id'), 'blog_comments', ['parent_comment_id'], unique=False)
    op.create_index(op.f('ix_blog_comments_post_id'), 'blog_comments', ['post_id'], unique=False)
    op.create_table('blog_posts_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['blog_posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['blog_tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_posts_tags_post_id'), 'blog_posts_tags', ['post_id'], unique=False)
    op.create_index(op.f('ix_blog_posts_tags_tag_id'), 'blog_posts_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###
    sync_trigger(conn, 'blog_posts', 'search_vector', ['title', 'content'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_blog_posts_tags_tag_id'), table_name='blog_posts_tags')
    op.drop_index(op.f('ix_blog_posts_tags_post_id'), table_name='blog_posts_tags')
    op.drop_table('blog_posts_tags')
    op.drop_index(op.f('ix_blog_comments_post_id'), table_name='blog_comments')
    op.drop_index(op.f('ix_blog_comments_parent_comment_id'), table_name='blog_comments')
    op.drop_index(op.f('ix_blog_comments_id'), table_name='blog_comments')
    op.drop_table('blog_comments')
    op.drop_index(op.f('ix_blog_posts_status_id'), table_name='blog_posts')
    op.drop_index('ix_blog_posts_search_vector', table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_id'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_category_id'), table_name='blog_posts')
    op.drop_table('blog_posts')
    op.drop_index(op.f('ix_auth_users_id'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_email'), table_name='auth_users')
    op.drop_table('auth_users')
    op.drop_table('auth_groups_permissions')
    op.drop_index(op.f('ix_blog_tags_name'), table_name='blog_tags')
    op.drop_index(op.f('ix_blog_tags_id'), table_name='blog_tags')
    op.drop_table('blog_tags')
    op.drop_index(op.f('ix_blog_post_statuses_name'), table_name='blog_post_statuses')
    op.drop_index(op.f('ix_blog_post_statuses_id'), table_name='blog_post_statuses')
    op.drop_table('blog_post_statuses')
    op.drop_index(op.f('ix_blog_categories_id'), table_name='blog_categories')
    op.drop_table('blog_categories')
    op.drop_table('auth_revoked_tokens')
    op.drop_index(op.f('ix_auth_permissions_id'), table_name='auth_permissions')
    op.drop_index(op.f('ix_auth_permissions_code_name'), table_name='auth_permissions')
    op.drop_table('auth_permissions')
    op.drop_index(op.f('ix_auth_groups_id'), table_name='auth_groups')
    op.drop_table('auth_groups')
    # ### end Alembic commands ###
